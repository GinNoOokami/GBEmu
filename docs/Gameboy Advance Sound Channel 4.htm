<html><head>
<title>Gameboy Advance Sound Channel 4</title>
<meta name="DESCRIPTION" content="The Most Comprehensive Gameboy Advance Sound System Documentation on the Net">
<meta name="KEYWORDS" content="Programming,Gameboy,Advance,Sound,System,Direct Sound, GBA, Sound Channel 4">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="stylesheet" href="Gameboy%20Advance%20Sound%20Channel%204_files/styles.css">
</head>

<body class="Normal" bgcolor="#FFFFFF">
<div align="center"> <a href="http://belogic.com/gba/files/soundtest4.zip">Demo ROM</a> • <a href="http://belogic.com/gba/files/sound4source.zip">Source 
  Code to Channel 4 Demo</a> </div>
<p class="head1"><img src="Gameboy%20Advance%20Sound%20Channel%204_files/cross.gif" align="absmiddle" height="23" width="22">&nbsp;Sound 
  Channel 4</p>
<p class="Normal">Sound channel 4 produces Pseudo-Noise with an envelope function. 
  Noise is generated by a polynomial counter also known as a Linear-Feedback Shift 
  Register (LFSR). LFSRs are special type of binary counter that have the particularity 
  of not counting in the normal binary increment/decrement sequence. These counters 
  find common uses in pseudorandom-numbers generation. Theory behind LFSRs and 
  Polynomial counters are out of the scope of this document but a simple approach 
  to key concepts will be described. Good <a href="#reference">references</a> 
  on the subjects are given at the end of this document.</p>
<p class="Normal">The pseudo-noise pattern playback frequency can be controlled 
  by a 3-bit clock divider used to divide the Sound system's clock (4.194304Mhz). 
  The clock divider's output is then fed into a pre-scaler which output is then 
  used as the polynomial counter's clock. The counter can be set to user either 
  7 or 15 stages/steps. Resulting into a 127 or 32767 input clock cycle period. 
  Using 7 stages give more metallic sounding effects when played faster (lower 
  divider ratios) while 15 stages sounds much like white noise.</p>
<p class="Normal">Selection of the clock divider is done by bits 0-2 of <a href="http://belogic.com/gba/registers.shtml#REG_SOUND4CNT_H">REG_SOUND4CNT_H</a>:</p>
<p>000: f*2<br>
  001: f<br>
  010: f/2<br>
  011: f/3<br>
  100: f/4<br>
  101: f/5<br>
  110: f/6<br>
  111: f/7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Where f=4.194304 
  Mhz/8<br>
  <br>
</p>
<p>Bit 3 of <a href="http://belogic.com/gba/registers.shtml#REG_SOUND4CNT_H">REG_SOUND4CNT_H</a> control 
  the number of counter stages: 0=15 stages, 1=7 stages. </p>
<p class="Normal">Selection of the pre-scaler divider value is done by bits 4-7 
  of <a href="http://belogic.com/gba/registers.shtml#REG_SOUND4CNT_H">REG_SOUND4CNT_H</a>:</p>
<p class="Normal">0000: Q/2<br>
  0001: Q/2^2<br>
  0010: Q/2^3<br>
  0011: Q/2^4<br>
  ....<br>
  1101: Q/2^14<br>
  1110: Not used<br>
  1111: Not used&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Where Q 
  is the clock divider's output<br>
</p>
<p class="Normal">The <a href="http://belogic.com/gba/registers.shtml#REG_SOUND4CNT_L">REG_SOUND4CNT_L</a> 
  contains the envelope function and the sound's length and its <a href="http://belogic.com/gba/channel1.shtml#envelope">functionality</a> 
  is identical to channel 1.</p>
<p class="Normal">Bit 14 of <a href="http://belogic.com/gba/registers.shtml#REG_SOUND4CNT_H">REG_SOUND4CNT_H</a> 
  control the loop/timed mode. If set to 1 sound plays for the duration specified 
  in <a href="http://belogic.com/gba/registers.shtml#REG_SOUND4CNT_L">REG_SOUND4CNT_L</a> otherwise sound 
  plays continuously. Bit 15 resets the sound and the LSFR counter.</p>
<p class="Normal">All registers can be modified during playback but sound need 
  to be reinitialized when modifying the envelope initial volume or the clock 
  divider for changes to take effects.</p>
<p class="Normal">&nbsp;</p>
<p class="head1">How it works</p>
<p class="Normal">This section is more intended to emulator writers who wants 
  to implement the exact sound of the original Gameboy sound system. </p>
<p class="Normal">An LFSR counter with n stages can implement a maximum of (2^n)-1 
  states, n representing the degree of the polynomial. All zeros state is not 
  allowed because it locks the counters. Each state in the entire count sequence 
  is generated once and only once.</p>
<p class="Normal">The Gameboy sound circuit implements a switchable 7/15-stages 
  LFSR. Below is an representation of the logic used by the Gameboy. It is important 
  to realize that channel 4 does not generate white noise <i>per-se </i>but<i> 
  Pseudo-noise. </i>White noise is a special type of signal containing an equal 
  amount of all frequencies and has no cycle period. LFSR counters have a cycle 
  period of (2^n)-1 input clock cycles. Played at high speed, the pattern starts 
  to exhibit a fundamental derived from the input clock frequency. This is clearly 
  evident when using the 7-stages mode since the cycle is only 127 input clocks. 
  15-stages mode has a much bigger cycle, 32767, so the pseudo-noise sounds much 
  more like white noise. </p>
<p class="Normal"><img src="Gameboy%20Advance%20Sound%20Channel%204_files/lfsr.gif" height="269" width="614"></p>
<p class="Normal">When initialized, all shift registers are set to 1. On each 
  clock pulse, bits are shifted from left to right (on the picture) s1 being the 
  least significant bit and the output that is sent to the channel's envelope 
  generator. The count sequence for the 7-stage LFSR, once the sound channel is 
  resetted is then:</p>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
  <tbody><tr>
    <td nowrap="nowrap" valign="top" width="15%"> Counter Steps<br>
      <table border="0" cellpadding="0" cellspacing="0" width="67%">
        <tbody><tr> 
          <td>1</td>
          <td>1</td>
          <td>1</td>
          <td>1</td>
          <td>1</td>
          <td>1</td>
          <td>1</td>
        </tr>
        <tr> 
          <td>0</td>
          <td>1</td>
          <td>1</td>
          <td>1</td>
          <td>1</td>
          <td>1</td>
          <td>1</td>
        </tr>
        <tr> 
          <td>0</td>
          <td>0</td>
          <td>1</td>
          <td>1</td>
          <td>1</td>
          <td>1</td>
          <td>1</td>
        </tr>
        <tr> 
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>1</td>
          <td>1</td>
          <td>1</td>
          <td>1</td>
        </tr>
        <tr> 
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>1</td>
          <td>1</td>
          <td>1</td>
        </tr>
        <tr> 
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>1</td>
          <td>1</td>
        </tr>
        <tr> 
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>1</td>
        </tr>
        <tr> 
          <td>1</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr> 
          <td>0</td>
          <td>1</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr> 
          <td>0</td>
          <td>0</td>
          <td>1</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr> 
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>1</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr> 
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>1</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr> 
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>1</td>
          <td>0</td>
        </tr>
        <tr> 
          <td>1</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>1</td>
        </tr>
        <tr> 
          <td>1</td>
          <td>1</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr> 
          <td>0</td>
          <td>1</td>
          <td>1</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr> 
          <td>0</td>
          <td>0</td>
          <td>1</td>
          <td>1</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr> 
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>1</td>
          <td>1</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr> 
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>1</td>
          <td>1</td>
          <td>0</td>
        </tr>
        <tr> 
          <td>1</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>1</td>
          <td>1</td>
        </tr>
        <tr> 
          <td>0</td>
          <td>1</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>1</td>
        </tr>
        <tr> 
          <td>1</td>
          <td>0</td>
          <td>1</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr> 
          <td>0</td>
          <td>1</td>
          <td>0</td>
          <td>1</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr> 
          <td>0</td>
          <td>0</td>
          <td>1</td>
          <td>0</td>
          <td>1</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr> 
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>1</td>
          <td>0</td>
          <td>1</td>
          <td>0</td>
        </tr>
        <tr> 
          <td>1</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>1</td>
          <td>0</td>
          <td>1</td>
        </tr>
        <tr> 
          <td>1</td>
          <td>1</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>1</td>
          <td>0</td>
        </tr>
        <tr> 
          <td>1</td>
          <td>1</td>
          <td>1</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>1</td>
        </tr>
        <tr> 
          <td>1</td>
          <td>1</td>
          <td>1</td>
          <td>1</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr> 
          <td colspan="7">.....<br>
            ... </td>
        </tr>
      </tbody></table>
      <br>
    </td>
    <td valign="top" width="85%">
      <p><img src="Gameboy%20Advance%20Sound%20Channel%204_files/lfsroutput.gif" height="110" width="616"> </p>
      <p> By looking at s1 output (the the least significant bit), we can see 
        it matches the pattern on the picture, which is a capture of the GBA output 
        for channel 4 in 7-stage mode. Since the counter is always counting in 
        the same sequence, the output bits can be stored in a lookup table for 
        fast emulation of this function. By packing the bits, a 4 KB lookup table 
        is sufficient to represent all states for both the 7 and 15 stages of 
        the LFSR.</p>
    </td>
  </tr>
</tbody></table>
<p class="head1"><a name="reference"></a>References</p>
<p class="Normal"><a href="http://www.eecircle.com/applets/009/LFSR.html">n-Stage 
  LFSR simulator Java applet </a></p>
<p class="Normal"><a href="http://archives.e-insite.net/archives/ednmag/reg/1996/010496/01df4.htm">EDN 
  article on LFSR</a></p>
<p class="Normal"><a href="http://www-math.cudenver.edu/%7Ewcherowi/courses/m5410/m5410fsr.html">Theory 
  behind LFSR</a></p>
<p class="topbg"> Code</p>
<p class="Normal"><span class="ccode"><span class="codedec">#include</span> &lt;<a href="http://belogic.com/gba/files/gba.h" target="_blank">gba.h</a>&gt;<br>
  </span></p>
<p class="Normal"><span class="ccode"> <span class="codedec">void</span> AgbMain(<span class="codedec">void</span>){ 
  <br>
  <span class="codecmt">//Play a sound on channel 4</span></span></p>
<p class="Normal"><span class="ccode"><span class="codecmt">//turn on sound circuit</span><br>
  REG_SOUNDCNT_X = 0x80;<br>
  <span class="codecmt">//full volume, enable sound 4 to left and right</span><br>
  REG_SOUNDCNT_L=0x4477;<br>
  <span class="codecmt">// Overall output ratio - Full</span><br>
  REG_SOUNDCNT_H = 2;<br>
  <br>
  REG_SOUND4CNT_L=0xf700; <span class="codecmt">//envellope decay, initial vol 
  max</span><br>
  REG_SOUND4CNT_H=0x8032; <span class="codecmt">//Loop mode, clk div:6, 7-stage,pre-scaler:3 
  </span><br>
  </span></p>
<p class="Normal"><span class="ccode">} </span></p>


<hr noshade="noshade">

<div align="center"><font size="-2" face="Arial, Helvetica, sans-serif">Copyright © 

  Belogic. All rights reserved. This web site and it's authors 

  or affiliates are in no way associated with, endorsed or supported by Nintendo. 

  All information collected and posted on this site has been gathered from publicly 

  available sources and does not, to our best knowledge, infrige any laws or copyrights. 

  Publication of this information is considered fair use as it is intented to 

  be used for learning and non-commercial use. Gameboy is a registered trademark of Nintendo.</font></div>










</body></html>